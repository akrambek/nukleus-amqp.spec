/*
 * Copyright 2016-2019 The Reaktivity Project
 *
 * The Reaktivity Project licenses this file to you under the Apache License,
 * version 2.0 (the "License"); you may not use this file except in compliance
 * with the License. You may obtain a copy of the License at:
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations
 * under the License.
 */
scope amqp
{
    scope control
    {
        struct AmqpRouteEx
        {
            string targetAddress;
            uint8 role;
        }
    }

    scope stream
    {
        struct AmqpBeginEx
        {
            string containerId;
            uint16 channel;
            string targetAddress;
            uint8 role;
        }

        struct AmqpDataEx
        {
            // AmqpTransferDataArguments
            uint32 deliveryId;
            octets[32] deliveryTag;
            uint32 messageFormat;
            uint8 settled;

            // AmqpTransferDataMessageAnnotations
            // TODO: need to add message annotations

            // AmqpTransferDataMessageProperties
            string messageId;
            string to;
            int64 creationTime;
        }

        struct AmqpWindowEx
        {
            // session flow control
            uint32 nextIncomingId;
            uint32 incomingWindow;
            uint32 nextOutgoingId;
            uint32 outgoingWindow;

            // link flow control
            uint32 deliveryCount;
            uint32 linkCredit;
        }
    }
}
