#
# Copyright 2016-2019 The Reaktivity Project
#
# The Reaktivity Project licenses this file to you under the Apache License,
# version 2.0 (the "License"); you may not use this file except in compliance
# with the License. You may obtain a copy of the License at:
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#

property serverTransport "nukleus://streams/target#0"

accept ${serverTransport}
  option nukleus:window 8192
  option nukleus:transmission "half-duplex"

accepted

read nukleus:begin.ext ${amqp:beginEx()
                             .containerId("c1")
                             .channel(1)
                             .targetAddress("queue://queue")
                             .role("receiver")
                             .build()}
connected

write nukleus:begin.ext ${amqp:beginEx()
                              .containerId("localhost")
                              .channel(1)
                              .targetAddress("queue://queue")
                              .role("sender")
                              .build()}

#read nukleus:window.ext ${amqp:windowEx()
#                              .nextIncomingId(1)
#                              .incomingWindow(2047)
#                              .nextOutgoingId(1)
#                              .outgoingWindow(2047483647)
#                              .deliveryCount(0)
#                              .linkCredit(1000)
#                              .build()}

write nukleus:data.ext ${amqp:dataEx()
                             .deliveryId(0)
                             .deliveryTag("00")
                             .messageFormat(0)
                             .flags(1)
                             .annotation("x-opt-jms-dest", 0)
                             .annotation("x-opt-jms-msg-type", 5)
                             .messageId("message1")
                             .to("queue://queue")
                             .creationTime(1560802760460)
                             .build()}
write "Text!"
